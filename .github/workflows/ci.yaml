name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    strategy:
      matrix:
        directory: [dev]

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials from AWS Account in ${{ matrix.directory }}
        env:
         ENVIRONMENT: ${{ matrix.directory }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets[format('{0}_ACCOUNT_ID', env.ENVIRONMENT)] }}:role/k8s-iam-oidc-role
          aws-region: us-east-1
          role-session-name: k8s-iam-role-deployment

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init ${{ matrix.directory }}
        id: tfinit
        working-directory: deploys/${{ matrix.directory }}
        run: terraform init

      - name: Terraform Plan ${{ matrix.directory }}
        id: tfplan
        if: github.event_name == 'pull_request'
        working-directory: deploys/${{ matrix.directory }}
        run: terraform plan

      - name: Comment on PR with Terraform outputs ${{ matrix.directory }}
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.tfplan.outputs.stdout }}"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Init ${{ matrix.directory }} ‚öôÔ∏è\`${{ steps.tfinit.outcome }}\`

            #### Terraform Plan ${{ matrix.directory }} üìñ\`${{ steps.tfplan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # - name: Terraform Apply ${{ matrix.directory }}
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   working-directory: deploys/${{ matrix.directory }}
      #   run: terraform apply -auto-approve
